<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-build</artifactId>
		<version>3.0.0-SNAPSHOT</version>
		<relativePath/>
	</parent>
	<artifactId>spring-cloud-docs</artifactId>
	<!-- We'll reuse this project to fetch all the jars -->
	<packaging>jar</packaging>
	<name>Spring Cloud Release Train Docs</name>
	<description>Spring Cloud Release Train Docs</description>
	<version>2020.0.0-SNAPSHOT</version>
	<properties>
		<main.basedir>${basedir}/..</main.basedir>
		<docs.main>spring-cloud</docs.main>
		<spring-cloud-release.version>2020.0.0-SNAPSHOT</spring-cloud-release.version>
		<spring-cloud-for-docs.version>2020-0</spring-cloud-for-docs.version>
		<spring-cloud-version>${spring-cloud-release.version}</spring-cloud-version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<configprops.path>${project.basedir}/src/main/asciidoc/_spring-cloud-${spring-cloud-for-docs.version}-configprops.adoc</configprops.path>
		<upload-docs-zip.phase>deploy</upload-docs-zip.phase>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-release.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Cloud Projects - add all dependencies below for the properties table generation -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-amqp</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-kafka</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-oauth2</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-all</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zookeeper-all</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-cloudfoundry</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-discovery</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-cloudfoundry-web</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-vault-config</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-vault-config-aws</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-vault-config-databases</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-vault-config-consul</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-vault-config-rabbitmq</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gateway-mvc</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gateway-webflux</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-test</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka-streams</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-kafka</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-rabbit</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit-test-support</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-function-web</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-function-adapter-aws</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-function-adapter-azure</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-all</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>docs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
						<configuration>
<!--							<useNativeGit>true</useNativeGit>-->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-asciidoc</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>
												${main.basedir}/bus/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/cli/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/cloudfoundry/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/commons/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/config/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/consul/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/contract/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/kubernetes/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/netflix/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/security/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/stream/spring-cloud-stream-docs/core/spring-cloud-stream-core-docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/stream/spring-cloud-stream-docs/rabbit/spring-cloud-stream-binder-rabbit-docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/stream/spring-cloud-stream-docs/kafka/spring-cloud-stream-binder-kafka/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/security/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/sleuth/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/task/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/vault/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>
												${main.basedir}/zookeeper/docs/src/main/asciidoc
											</directory>
											<includes>
												<include>images/**</include>
											</includes>
											<excludes>
												<exclude>*.sh</exclude>
											</excludes>
										</resource>
									</resources>
									<outputDirectory>target/refdocs
									</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${exec-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>set-symbolic-link</id>
								<!-- We'll add symbolic links ones the generation is done, otherwise the rendering will take place twice -->
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.basedir}/src/main/asciidoc/symbolic_links.sh</executable>
									<!-- @formatter:off -->
									<commandlineArgs>${project.basedir} ${spring-cloud-for-docs.version}
									</commandlineArgs>
									<!-- @formatter:on -->
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/libs-release-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>
